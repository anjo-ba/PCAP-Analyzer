dist: xenial

notifications:
  email: false

sudo: required

language: python
python:
  - "3.7"

git:
  quiet: true
  depth: false

services:
  - docker

addons:
  sonarcloud:
    organization: "anjo-hsr"
    token:
      secure: $SONAR_TOKEN

before_install:
  - sudo apt-get update
  - sudo apt-get install dos2unix
  - dos2unix ./app_deployer.sh

jobs:
  include:
    - stage: test
      script:
        - cd ./backend
        - mkdir reports
        - nosetests -v --match="^(?:|[\b_\.\-])[Tt]est" --cover-package=bin --cover-min-percentage=60 --cover-inclusive --cover-erase --with-xcoverage --xcoverage-file=./reports/coverage.xml bin/test

    - stage: build
      script:
        - ./app_deployer.sh recreate

    - stage: sonar
      script:
        - cd ./backend
        - mkdir reports
        - nosetests -v --match="^(?:|[\b_\.\-])[Tt]est" --cover-package=bin --cover-min-percentage=60 --cover-inclusive --cover-erase --with-xcoverage --xcoverage-file=./reports/coverage.xml bin/test
        - cd ./bin
        - pylint -r n --exit-zero --rcfile=../.pylintrc main test > ../reports/pylint_report.txt
        - cd ../..
        - sonar-scanner

    - stage: publish docker container
      if: branch = master AND type = push AND fork = false
      script:
        - ./app_deployer.sh generate-tar
        - cd ./docker
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build -t traffic-analyzer -f ./Dockerfile-Production .
        - docker images
        - docker tag traffic-analyzer $DOCKER_USERNAME/traffic-analyzer
        - docker push $DOCKER_USERNAME/traffic-analyzer

    - stage: generate .tar.gz file
      # if: branch = master AND type = push AND fork = false
      script:
        - docker run -v "$(pwd):/src/" cdrx/pyinstaller-windows:python3-32bit "pyinstaller --onefile ./backend/bin/main/traffic_analyzer.py"
        - sudo mv ./dist/traffic_analyzer.exe ./backend/bin/main/traffic_analyzer.exe
        - ./app_deployer.sh generate-tar ./
        - sudo apt intall lftp -y
        - lftp -c "open -u $FTP_USER,$FTP_PASSOWRD $FTP_SITE ; set ftp:ssl-allow no ; put -O files/ ./traffic-analyzer.tar.gz ; quit"
